name: Postgres Backup

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '*/2 * * * *'

jobs:
  backup:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: bootcamp_admin
          POSTGRES_PASSWORD: secure_password
          POSTGRES_DB: bootcamp_db
        ports:
          - 5434:5432
        options: >-
          --health-cmd "pg_isready -U bootcamp_admin"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Make backup script executable
        run: chmod +x ./init/backup.sh

      - name: Run backup (uses ./init/backup.sh)
        # The Postgres service is reachable from the runner at localhost:5434.
        run: |
          set -euo pipefail
          mkdir -p "$GITHUB_WORKSPACE/postgres_backups"
          echo "Running ./init/backup.sh (HOST_BACKUP_DIR=$HOST_BACKUP_DIR DB_HOST=$DB_HOST DB_PORT=$DB_PORT DB_NAME=$DB_NAME)"
          ./init/backup.sh
        env:
          HOST_BACKUP_DIR: ${{ github.workspace }}/postgres_backups
          DB_HOST: localhost
          DB_PORT: 5434
          DB_USER: bootcamp_admin
          DB_PASSWORD: secure_password
          DB_NAME: bootcamp_db

      - name: "Debug: list backups directory"
        run: |
          echo "Workspace: $GITHUB_WORKSPACE"
          ls -la "$GITHUB_WORKSPACE" || true
          echo "Backups dir:"
          ls -la "$GITHUB_WORKSPACE/postgres_backups" || echo "postgres_backups not found"
          echo "Find .gz files:"
          find "$GITHUB_WORKSPACE/postgres_backups" -maxdepth 1 -type f -name '*.gz' -ls || true

      - name: Show newest backup path
        id: show_saved
        run: |
          set -euo pipefail
          OUT_DIR="$GITHUB_WORKSPACE/postgres_backups"
          if compgen -G "$OUT_DIR/*.gz" > /dev/null; then
            newest=$(ls -1t "$OUT_DIR"/*.gz | head -n1)
            echo "Newest backup file: $newest"
            echo "backup_path=$newest" >> "$GITHUB_OUTPUT"
          else
            echo "No .gz backup files found in $OUT_DIR"
            echo "backup_path=" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate backups CSV
        run: |
          set -euo pipefail
          OUT_DIR="$GITHUB_WORKSPACE/postgres_backups"
          mkdir -p "$OUT_DIR"
          OUT="$OUT_DIR/backups.csv"
          echo "filename,path,timestamp,size_bytes" > "$OUT"
          shopt -s nullglob || true
          for f in "$OUT_DIR"/*.gz; do
            [ -e "$f" ] || continue
            fn=$(basename "$f")
            # modification time in UTC, format YYYY-MM-DDTHH:MM:SSZ
            mtime=$(date -u -d "@$(stat -c %Y "$f")" +"%Y-%m-%dT%H:%M:%SZ")
            size=$(stat -c %s "$f")
            safe_fn="${fn//,/\\,}"
            echo "${safe_fn},postgres_backups,${mtime},${size}" >> "$OUT"
          done
          echo "Generated $OUT"
          ls -la "$OUT_DIR" || true
          echo "Contents of CSV:"
          sed -n '1,200p' "$OUT" || true

      - name: Upload backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: postgres-backups
          path: ${{ github.workspace }}/postgres_backups/**