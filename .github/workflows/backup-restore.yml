name: Postgres Backup

# You can also schedule it as a cron job
on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '*/2 * * * *' # Every 2 minutes

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Docker (already installed on GitHub runners)
      - name: Ensure Docker is running
        run: docker info

      # 3️⃣ Start Postgres container if needed
      - name: Start Postgres container
        run: |
          CONTAINER_NAME="postgres_bootcamp"
          POSTGRES_PASSWORD="postgres"
          
          # Check if container exists
          if [ "$(docker ps -q -f name=$CONTAINER_NAME)" = "" ]; then
            echo "Starting Postgres container..."
            docker run -d \
              --name $CONTAINER_NAME \
              -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
              -v pgdata:/var/lib/postgresql/data \
              postgres:17-alpine
            sleep 10
          else
            echo "Container $CONTAINER_NAME is already running"
          fi

      # 4️⃣ Run backup script
      - name: Run cron_job_runner.sh
        env:
          HOST_BACKUP_DIR: ${{ github.workspace }}/postgres_backups
        run: |
          chmod +x ./cron_job_runner.sh
          ./cron_job_runner.sh

      # 5️⃣ Upload backups as workflow artifact
      - name: Upload backups
        uses: actions/upload-artifact@v4
        with:
          name: postgres-backups
          path: ${{ github.workspace }}/postgres_backups
