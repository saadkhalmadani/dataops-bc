name: Backup & Restore Database
on:
  workflow_dispatch:
    inputs:
      restore:
        description: 'Run restore job?'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

jobs:

  backup:
    runs-on: ubuntu-24.04
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5434:5432
        options: >-
          --health-cmd="pg_isready -U ${{ env.POSTGRES_USER }} -d ${{ env.POSTGRES_DB }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Run backup script
        run: |
          chmod +x ./init/backup.sh
          ./init/backup.sh
        env:
          DATABASE_URL: postgres://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@localhost:5434/${{ env.POSTGRES_DB }}
          BACKUP_PATH: ./backups/

      - name: Upload backup artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          name: db-backup-${{ github.run_id }}
          path: ./backups/

  restore:
    runs-on: ubuntu-24.04
    needs: backup
    if: github.event.inputs.restore == 'true'

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5434:5432
        options: >-
          --health-cmd="pg_isready -U ${{ env.POSTGRES_USER }} -d ${{ env.POSTGRES_DB }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Download latest backup
        uses: actions/download-artifact@v4
        with:
          name: db-backup-${{ github.run_id }}
          path: ./backups/

      - name: Verify latest backup checksum
        run: |
          echo "üîç Verifying latest backup checksum..."
          CHECKSUM_FILE=$(ls -t ./backups/*.sha256 2>/dev/null | head -n1)
          if [[ -z "$CHECKSUM_FILE" ]]; then
            echo "‚ùå No checksum file found!"
            exit 1
          fi
          sha256sum -c "$CHECKSUM_FILE"

      - name: Run restore script
        run: |
          chmod +x ./init/restore.sh
          ./init/restore.sh
        env:
          DATABASE_URL: postgres://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@localhost:5434/${{ env.POSTGRES_DB }}
          BACKUP_PATH: ./backups/

      # Optional: Debug Postgres logs if the service fails
      - name: Debug Postgres logs
        if: failure()
        run: docker logs $(docker ps -q --filter "ancestor=postgres:15")
